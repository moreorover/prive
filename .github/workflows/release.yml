name: ðŸŽ‰ Release

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
  SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    permissions:
      contents: write       # to create release (changesets/action)
      issues: write         # to post issue comments (changesets/action)
      pull-requests: write  # to create pull request (changesets/action)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Vercel CLI
        run: pnpm i -g vercel@canary

      - name: Pull Dev Env. Vars.
        run: vercel env pull --yes --token=${{ secrets.VERCEL_TOKEN }}

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Start Local Supabase
        run: supabase start -x imgproxy,studio,storage-api,realtime,inbucket,edge-runtime

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: pnpm install

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: Test Unit ðŸ§ª
        run: pnpm test:unit

      - name: Test Integration ðŸ§ª
        run: pnpm test:integration

      - name: Archive test reports ðŸ“¦
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/index.html

      - name: Create Release Pull Request
        id: changesets
        uses: changesets/action@v1
        with:
          commit: "chore(release): version package"
          title: "chore(release): version package"
          publish: "pnpm run release"
          version: "pnpm run version"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Ensure to have this set up under GitHub secrets

      - name: Link Supabase CLI to Prod
        run: supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_ID }}

      - name: Push Supabase DB Changes
        run: supabase db push

      - name: Pull Prod Env Variables
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN}}
